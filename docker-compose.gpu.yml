version: '3.8'

services:
  llm_service:
    build:
      context: ./gpu_services/llm_service
      dockerfile: Dockerfile.gpu
    container_name: llm_service
    ports:
      - "8001:8001"
    env_file:
      - ./gpu_services/llm_service/.env
    volumes:
      - hf_cache:/root/.cache/huggingface
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    command: ["python", "-m", "vllm.entrypoints.openai.api_server", "--host", "0.0.0.0", "--port", "8001", "--model", "google/gemma-3n-E2B", "--trust-remote-code", "--gpu-memory-utilization", "0.90"]

  docling_service:
    build:
      context: ./gpu_services/docling_service
      dockerfile: Dockerfile.gpu
    container_name: docling_service
    ports:
      - "8004:8004"
    env_file:
      - ./gpu_services/docling_service/.env
    volumes:
      - ./data:/app/data
      - docling_cache:/root/.cache/docling
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  embedding_service:
    build:
      context: ./gpu_services/embedding_service
      dockerfile: Dockerfile.gpu
    container_name: embedding_service
    ports:
      - "8002:8002"
    volumes:
      - hf_cache:/root/.cache/huggingface
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  knowledge_graph_service:
    build:
      context: ./gpu_services/knowledge_graph_service
      dockerfile: Dockerfile.gpu
    container_name: knowledge_graph_service
    ports:
      - "8003:8003"
    env_file:
      - ./gpu_services/knowledge_graph_service/.env

volumes:
  hf_cache:
  docling_cache: